/*
Ledger API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerclient

import (
	"encoding/json"
)

// CursorResponse struct for CursorResponse
type CursorResponse struct {
	Cursor *Cursor `json:"cursor,omitempty"`
}

// NewCursorResponse instantiates a new CursorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorResponse() *CursorResponse {
	this := CursorResponse{}
	return &this
}

// NewCursorResponseWithDefaults instantiates a new CursorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorResponseWithDefaults() *CursorResponse {
	this := CursorResponse{}
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *CursorResponse) GetCursor() Cursor {
	if o == nil || o.Cursor == nil {
		var ret Cursor
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorResponse) GetCursorOk() (*Cursor, bool) {
	if o == nil || o.Cursor == nil {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *CursorResponse) HasCursor() bool {
	if o != nil && o.Cursor != nil {
		return true
	}

	return false
}

// SetCursor gets a reference to the given Cursor and assigns it to the Cursor field.
func (o *CursorResponse) SetCursor(v Cursor) {
	o.Cursor = &v
}

func (o CursorResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cursor != nil {
		toSerialize["cursor"] = o.Cursor
	}
	return json.Marshal(toSerialize)
}

type NullableCursorResponse struct {
	value *CursorResponse
	isSet bool
}

func (v NullableCursorResponse) Get() *CursorResponse {
	return v.value
}

func (v *NullableCursorResponse) Set(val *CursorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorResponse(val *CursorResponse) *NullableCursorResponse {
	return &NullableCursorResponse{value: val, isSet: true}
}

func (v NullableCursorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


