/*
Ledger API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgerclient

import (
	"encoding/json"
)

// CreateTransactions200ResponseAllOf struct for CreateTransactions200ResponseAllOf
type CreateTransactions200ResponseAllOf struct {
	Cursor *Cursor `json:"cursor,omitempty"`
}

// NewCreateTransactions200ResponseAllOf instantiates a new CreateTransactions200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransactions200ResponseAllOf() *CreateTransactions200ResponseAllOf {
	this := CreateTransactions200ResponseAllOf{}
	return &this
}

// NewCreateTransactions200ResponseAllOfWithDefaults instantiates a new CreateTransactions200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransactions200ResponseAllOfWithDefaults() *CreateTransactions200ResponseAllOf {
	this := CreateTransactions200ResponseAllOf{}
	return &this
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *CreateTransactions200ResponseAllOf) GetCursor() Cursor {
	if o == nil || o.Cursor == nil {
		var ret Cursor
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransactions200ResponseAllOf) GetCursorOk() (*Cursor, bool) {
	if o == nil || o.Cursor == nil {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *CreateTransactions200ResponseAllOf) HasCursor() bool {
	if o != nil && o.Cursor != nil {
		return true
	}

	return false
}

// SetCursor gets a reference to the given Cursor and assigns it to the Cursor field.
func (o *CreateTransactions200ResponseAllOf) SetCursor(v Cursor) {
	o.Cursor = &v
}

func (o CreateTransactions200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cursor != nil {
		toSerialize["cursor"] = o.Cursor
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTransactions200ResponseAllOf struct {
	value *CreateTransactions200ResponseAllOf
	isSet bool
}

func (v NullableCreateTransactions200ResponseAllOf) Get() *CreateTransactions200ResponseAllOf {
	return v.value
}

func (v *NullableCreateTransactions200ResponseAllOf) Set(val *CreateTransactions200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransactions200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransactions200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransactions200ResponseAllOf(val *CreateTransactions200ResponseAllOf) *NullableCreateTransactions200ResponseAllOf {
	return &NullableCreateTransactions200ResponseAllOf{value: val, isSet: true}
}

func (v NullableCreateTransactions200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransactions200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


